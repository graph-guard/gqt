# Makes sure modulo expressions containing variables refering to
# non-equals constraints aren't reduced.
schema: >
  type Query {
    b(x:Boolean):Int
    v(v:Boolean):Int
  }

template: >
  query {
    b(x: !$v)
    v(v=$v:*)
  }

expect-ast:
  location: 0:1:1-33:4:2
  operationType: Query
  selectionSet:
    location: 6:1:7-33:4:2
    selections:
    - location: 10:2:3-19:2:12
      selectionType: field
      name:
        location: 10:2:3-11:2:4
        name: b
      type: Int
      argumentList:
        location: 11:2:4-19:2:12
        arguments:
        - location: 12:2:5-18:2:11
          name:
            location: 12:2:5-13:2:6
            name: x
          type: Boolean
          constraint:
            location: 15:2:8-18:2:11
            constraintType: equals
            value:
              location: 15:2:8-18:2:11
              expressionType: logicalNegation
              expression:
                location: 16:2:9-18:2:11
                expressionType: variableReference
                name: v
    - location: 22:3:3-31:3:12
      selectionType: field
      name:
        location: 22:3:3-23:3:4
        name: v
      type: Int
      argumentList:
        location: 23:3:4-31:3:12
        arguments:
        - location: 24:3:5-30:3:11
          name:
            location: 24:3:5-25:3:6
            name: v
          variable:
            location: 26:3:7-28:3:9
            name: v
          type: Boolean
          constraint:
            location: 29:3:10-30:3:11
            constraintType: any
