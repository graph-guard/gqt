schema: >
  type Query {
    boolean (a: Boolean!): Int!
    int     (a: Int!):     Int!
    float   (a: Float!):   Int!
    enum    (a: Color!):   Int!
    id      (a: ID!):      Int!
    string  (a: String!):  Int!
    array   (a: [Int]!):   Int!
    object  (a: In!):      Int!
  }
  input In { f:Int! }
  enum Color { red green blue }

template: >
  query {
    boolean (a: null)
    int     (a: null)
    float   (a: null)
    enum    (a: null)
    id      (a: null)
    string  (a: null)
    array   (a: null)
    object  (a: null)
  }

expect-errors:
  - '2:15: expected type Boolean! but received null'
  - '3:15: expected type Int! but received null'
  - '4:15: expected type Float! but received null'
  - '5:15: expected type Color! but received null'
  - '6:15: expected type ID! but received null'
  - '7:15: expected type String! but received null'
  - '8:15: expected type [Int]! but received null'
  - '9:15: expected type In! but received null'

expect-ast(schemaless):
  operationType: Query
  location: "0:1:1"
  selectionSet:
    location: "6:1:7"
    selections:
    - selectionType: field
      name: boolean
      location: "10:2:3"
      argumentList:
        location: "18:2:11"
        arguments:
        - name: a
          location: "19:2:12"
          constraint:
            constraintType: equals
            location: "22:2:15"
            value:
              expressionType: "null"
              location: "22:2:15"
    - selectionType: field
      name: int
      location: "30:3:3"
      argumentList:
        location: "38:3:11"
        arguments:
        - name: a
          location: "39:3:12"
          constraint:
            constraintType: equals
            location: "42:3:15"
            value:
              expressionType: "null"
              location: "42:3:15"
    - selectionType: field
      name: float
      location: "50:4:3"
      argumentList:
        location: "58:4:11"
        arguments:
        - name: a
          location: "59:4:12"
          constraint:
            constraintType: equals
            location: "62:4:15"
            value:
              expressionType: "null"
              location: "62:4:15"
    - selectionType: field
      name: enum
      location: "70:5:3"
      argumentList:
        location: "78:5:11"
        arguments:
        - name: a
          location: "79:5:12"
          constraint:
            constraintType: equals
            location: "82:5:15"
            value:
              expressionType: "null"
              location: "82:5:15"
    - selectionType: field
      name: id
      location: "90:6:3"
      argumentList:
        location: "98:6:11"
        arguments:
        - name: a
          location: "99:6:12"
          constraint:
            constraintType: equals
            location: "102:6:15"
            value:
              expressionType: "null"
              location: "102:6:15"
    - selectionType: field
      name: string
      location: "110:7:3"
      argumentList:
        location: "118:7:11"
        arguments:
        - name: a
          location: "119:7:12"
          constraint:
            constraintType: equals
            location: "122:7:15"
            value:
              expressionType: "null"
              location: "122:7:15"
    - selectionType: field
      name: array
      location: "130:8:3"
      argumentList:
        location: "138:8:11"
        arguments:
        - name: a
          location: "139:8:12"
          constraint:
            constraintType: equals
            location: "142:8:15"
            value:
              expressionType: "null"
              location: "142:8:15"
    - selectionType: field
      name: object
      location: "150:9:3"
      argumentList:
        location: "158:9:11"
        arguments:
        - name: a
          location: "159:9:12"
          constraint:
            constraintType: equals
            location: "162:9:15"
            value:
              expressionType: "null"
              location: "162:9:15"