schema: >
  type Query {i: IfaceFooBar!}
  interface IfaceFooBar {x:Int}
  type Foo implements IfaceFooBar {x:Int}
  type Bar implements IfaceFooBar {x:Int}

template: >
  query { i { ... on Foo { x } } }

expect-ast:
  location: 0:1:1-32:1:33
  operationType: Query
  selectionSet:
    location: 6:1:7-32:1:33
    selections:
    - location: 8:1:9-30:1:31
      selectionType: field
      name:
        location: 8:1:9-9:1:10
        name: i
      type: IfaceFooBar!
      selectionSet:
        location: 10:1:11-30:1:31
        selections:
        - location: 12:1:13-28:1:29
          selectionType: inlineFragment
          typeCondition:
            location: 19:1:20-22:1:23
            typeName: Foo
            type: Foo
          selectionSet:
            location: 23:1:24-28:1:29
            selections:
            - location: 25:1:26-26:1:27
              selectionType: field
              name:
                location: 25:1:26-26:1:27
                name: x
              type: Int

expect-ast(schemaless):
  location: 0:1:1-32:1:33
  operationType: Query
  selectionSet:
    location: 6:1:7-32:1:33
    selections:
    - location: 8:1:9-30:1:31
      selectionType: field
      name:
        location: 8:1:9-9:1:10
        name: i
      selectionSet:
        location: 10:1:11-30:1:31
        selections:
        - location: 12:1:13-28:1:29
          selectionType: inlineFragment
          typeCondition:
            location: 19:1:20-22:1:23
            typeName: Foo
          selectionSet:
            location: 23:1:24-28:1:29
            selections:
            - location: 25:1:26-26:1:27
              selectionType: field
              name:
                location: 25:1:26-26:1:27
                name: x
