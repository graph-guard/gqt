schema: >
  type Query {i: IfaceFooBar!}
  interface IfaceFooBar {x:Int}
  type Foo implements IfaceFooBar {x:Int}
  type Bar implements IfaceFooBar {x:Int}

template: >
  query { i { ... on Foo { x } } }

expect-ast:
  operationType: Query
  location: "0:1:1"
  selectionSet:
    location: "6:1:7"
    selections:
    - selectionType: field
      name: i
      location: "8:1:9"
      type: IfaceFooBar!
      selectionSet:
        location: "10:1:11"
        selections:
        - selectionType: inlineFragment
          typeCondition:
            location: "19:1:20"
            typeName: Foo
            type: Foo
          location: "12:1:13"
          selectionSet:
            location: "23:1:24"
            selections:
            - selectionType: field
              name: x
              location: "25:1:26"
              type: Int

expect-ast(schemaless):
  operationType: Query
  location: "0:1:1"
  selectionSet:
    location: "6:1:7"
    selections:
    - selectionType: field
      name: i
      location: "8:1:9"
      selectionSet:
        location: "10:1:11"
        selections:
        - selectionType: inlineFragment
          typeCondition:
            location: "19:1:20"
            typeName: Foo
          location: "12:1:13"
          selectionSet:
            location: "23:1:24"
            selections:
            - selectionType: field
              name: x
              location: "25:1:26"
