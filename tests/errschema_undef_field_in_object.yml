schema: >
  type Query {f(a: Input!):String!}
  input Input {name: String!}

template: >
  query { f(a:{name: "okay", inexistent: "not okay"}) }

expect-errors:
  - '1:28: field "inexistent" is undefined in type Input'

expect-ast(schemaless):
  location: 0:1:1-53:1:54
  operationType: Query
  selectionSet:
    location: 6:1:7-53:1:54
    selections:
    - location: 8:1:9-51:1:52
      selectionType: field
      name:
        location: 8:1:9-9:1:10
        name: f
      argumentList:
        location: 9:1:10-51:1:52
        arguments:
        - location: 10:1:11-50:1:51
          name:
            location: 10:1:11-11:1:12
            name: a
          constraint:
            location: 12:1:13-50:1:51
            constraintType: equals
            value:
              location: 12:1:13-50:1:51
              expressionType: object
              fields:
              - location: 13:1:14-25:1:26
                name:
                  location: 13:1:14-17:1:18
                  name: name
                constraint:
                  location: 19:1:20-25:1:26
                  constraintType: equals
                  value:
                    location: 19:1:20-25:1:26
                    expressionType: string
                    value: okay
              - location: 27:1:28-49:1:50
                name:
                  location: 27:1:28-37:1:38
                  name: inexistent
                constraint:
                  location: 39:1:40-49:1:50
                  constraintType: equals
                  value:
                    location: 39:1:40-49:1:50
                    expressionType: string
                    value: not okay
